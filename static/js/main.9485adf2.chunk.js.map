{"version":3,"sources":["App/components/Header.js","App/Analizador-lexico/categories/charConst.js","App/components/CardLex.js","App/components/CardSin.js","App/Analizador-de-sintaxis/structures/syntaxAnalyzer2.js","App/components/Form.js","App/Analizador-lexico/automaton.js","App/Analizador-lexico/categories/separator.js","App/Analizador-lexico/categories/operator.js","App/Analizador-lexico/categories/numConst.js","App/Analizador-lexico/categories/identify.js","App/Analizador-lexico/categories/keyword.js","App/pages/home.js","App/index.js","index.js"],"names":["header","onSelect","activeKey","props","Header","Navbar","style","padding","Body","isCharConst","word","test","trim","CardLex","tokens","styleCenter","display","weight","dataStyle","fontSize","fontWeight","justifyContent","numberStyle","textAlign","paddingLeft","tags","key","tag","Tag","localeCompare","color","Panel","collapsible","bordered","marginTop","List","size","hover","map","item","index","Item","FlexboxGrid","justify","colspan","response","responseList","console","log","syntaxAnalyzer2","dictTokens","tokensList","value","push","toString","alphabet","nonterminals","terminals","rules","firsts","follows","ruleTable","EPSILON","result","collectFirsts4","development","nonterminalFirsts","epsilonInSymbolFirsts","j","symbol","isElement","addUnique","k","first","collectFirsts3","sequence","undefined","length","trimElements","array","i","element","split","rule","nonterminal","array1","array2","subtract","collectAlphabetAndNonterminalsAndTerminals","notDone","Object","collectFirsts","nonterminalFollows","symbolFollows","afterSymbolFirsts","slice","parseInt","l","collectFollows","developmentFirsts","oldTableRule","symbol2","makeRuleTable","input","stack","tree","label","children","parents","stackTop","pop","node","reverseDevelopment","reverse","concat","parseInput","panelStyle","width","FormSirio","useState","cardLex","setCardLex","cardSin","setCardSin","textArea","setTextArea","Form","fluid","FormGroup","ControlLabel","setValue","height","language","inlineNumbers","borderRadius","tabSize","ButtonToolbar","Button","appearance","onClick","text","textArray","textArrayCharConst","forEach","expr","replaceAll","regex","RegExp","charAt","join","match","listaTokens","isOperator","acceptation","estate","isNumConst","isIdentifier","isKeyword","automaton","CardSin","Home","Container","Content","maxWidth","alignItems","Col","Row","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9485adf2.chunk.js","sourcesContent":["import {\r\n    Header,\r\n    Navbar\r\n} from 'rsuite';\r\n\r\nfunction header({onSelect, activeKey, ...props}) {\r\n\r\n    const logoStyle = {\r\n        padding: \"20px\",\r\n    };\r\n\r\n    return (\r\n        <Header>\r\n            <Navbar {...props}>\r\n                <Navbar.Header>\r\n                    <div style={logoStyle}>\r\n                        SIRIO\r\n                    </div>\r\n                </Navbar.Header>\r\n                <Navbar.Body>\r\n                </Navbar.Body>\r\n            </Navbar>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default header;\r\n\r\n\r\n\r\n","export default function isCharConst(word) {\r\n    let acceptation\r\n    const regex = /([\"'])((?:(?=(?:\\\\)*)\\\\.|.)*?)\\1/gm\r\n    acceptation = regex.test(word.trim())\r\n    return acceptation;\r\n}\r\n","import {\r\n    Panel,\r\n    List,\r\n    Tag,\r\n    FlexboxGrid\r\n} from 'rsuite';\r\n\r\nfunction CardLex({tokens, onSelect, activeKey, ...props}) {\r\n    //css\r\n    const panelStyle = {\r\n        marginTop: \"2%\"\r\n    }\r\n\r\n    const styleCenter = {\r\n        display: 'flex',\r\n        weight: \"20px\"\r\n    };\r\n\r\n    const dataStyle = {\r\n        fontSize: '1.2em',\r\n        fontWeight: 500,\r\n        justifyContent: 'left',\r\n    };\r\n    const numberStyle = {\r\n        fontSize: '1.2em',\r\n        fontWeight: 500,\r\n        textAlign:\"right\",\r\n        paddingLeft:\"1.2em\"\r\n    };\r\n\r\n    function tags(key) {\r\n        let tag = <Tag>No encontrado</Tag>\r\n\r\n        if (0 === key.localeCompare(\"Cadena de texto\")) {\r\n            tag = <Tag color=\"orange\">Cadena de texto</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Palabra reservada\")) {\r\n            tag = <Tag color=\"blue\">Palabra reservada</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Identificador\")) {\r\n            tag = <Tag color=\"green\">Identificador</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Constante Numerica\")) {\r\n            tag = <Tag color=\"violet\">Constante Numérica</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Operador\")) {\r\n            tag = <Tag color=\"cyan\">Operador</Tag>\r\n        }\r\n        if (0 === key.localeCompare(\"Separador\")) {\r\n            tag = <Tag color=\"red\">Separador</Tag>\r\n        }\r\n\r\n        return tag\r\n    }\r\n\r\n    return (\r\n\r\n        <Panel header=\"Analisis Léxico\" collapsible bordered style={panelStyle}>\r\n            <div >\r\n                <Panel bordered>\r\n                    <List size=\"sm\" hover>\r\n                        {tokens.map((item, index) => (\r\n                            <List.Item key={item['key']} index={index}>\r\n                                <FlexboxGrid justify={\"left\"}>\r\n                                    <FlexboxGrid.Item colspan={2} style={styleCenter}>\r\n                                        <div style={numberStyle}>\r\n                                            {index+1}.\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item colspan={4} style={styleCenter}>\r\n                                        <div style={{textAlign: 'right'}}>\r\n                                            <div>{tags(item['key'])}</div>\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                    <FlexboxGrid.Item colspan={9} style={styleCenter}>\r\n                                        <div style={{textAlign: 'left'}}>\r\n                                            <div style={dataStyle}>{item['value']}</div>\r\n                                        </div>\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n                            </List.Item>\r\n\r\n                        ))}\r\n                    </List>\r\n                </Panel>\r\n            </div>\r\n        </Panel>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default CardLex;\r\n","import {\r\n    Panel\r\n} from 'rsuite';\r\n\r\nfunction CardLex({response, onSelect, activeKey, ...props}) {\r\n    //css\r\n    const panelStyle = {\r\n        marginTop: \"2%\"\r\n    }\r\n\r\n\r\n    let responseList = response\r\n    console.log(response)\r\n    return (\r\n\r\n        <Panel header=\"Analisis Sintáctico\" collapsible bordered style={panelStyle}>\r\n            <div >\r\n                {responseList}\r\n            </div>\r\n        </Panel>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default CardLex;\r\n","export default function syntaxAnalyzer2(dictTokens) {\r\n    let tokensList = []\r\n\r\n\r\n    dictTokens.map(function (item) {\r\n        let key = item['key']\r\n        let value = item['value']\r\n\r\n        switch (key) {\r\n            case 'Palabra reservada':\r\n                tokensList.push(value.toString());\r\n                break;\r\n            case \"Identificador\":\r\n                tokensList.push(\"id\");\r\n                break;\r\n            case \"Separador\":\r\n                tokensList.push(value.toString());\r\n                break;\r\n            case \"Cadena de texto\":\r\n                tokensList.push(\"str\");\r\n                break;\r\n            case \"Constante Numerica\":\r\n                tokensList.push(\"num\");\r\n                break;\r\n            case \"Operador\":\r\n                tokensList.push(value.toString());\r\n                break;\r\n        }\r\n\r\n    })\r\n\r\n    var EPSILON = '\\'\\'';\r\n    var result = \"Sintaxis Correcta\";\r\n    let result2;\r\n    var alphabet;\r\n    var nonterminals;\r\n    var terminals;\r\n    var rules;\r\n    var firsts;\r\n    var follows;\r\n    var ruleTable;\r\n    let grammar=\"PROGRAM -> DECLIST\\n\" +\r\n        \"DECLIST ->\\tDECL DECLIST1\\n\" +\r\n        \"DECLIST1 ->\\tDECL DECLIST1\\n\" +\r\n        \"DECLIST1 -> ''\\n\" +\r\n        \"DECL ->\\tVARDECL\\n\" +\r\n        \"DECL -> STMT\\n\" +\r\n        \"VARDECL ->\\tvar VARDECLIST ;\\n\" +\r\n        \"VARDECLIST ->\\tVARDECINIT VARDECLIST\\n\" +\r\n        \"VARDECLIST -> , VARDECINIT VARDECLIST\\n\" +\r\n        \"VARDECLIST -> ''\\n\" +\r\n        \"VARDECINIT ->\\tid VARINITEXP\\n\" +\r\n        \"VARINITEXP ->\\t= SIMPLEEXP\\n\" +\r\n        \"VARINITEXP -> ''\\n\" +\r\n        \"STMT ->\\tSELECTMT\\n\" +\r\n        \"STMT -> ITERSTMT\\n\" +\r\n        \"SELECTMT ->\\tif ( SIMPLEEXP ) { DECLIST } ELSE\\n\" +\r\n        \"ELSE ->\\telse { DECLIST }\\n\" +\r\n        \"ELSE -> ''\\n\" +\r\n        \"ITERSTMT ->\\twhile ( SIMPLEEXP ) { DECLIST }\\n\" +\r\n        \"\\n\" +\r\n        \"SIMPLEEXP ->\\tANDCOND\\n\" +\r\n        \"ANDCOND ->\\tORCOND ANDCOND1\\n\" +\r\n        \"ANDCOND1 ->\\tand ORCOND ANDCOND1\\n\" +\r\n        \"ANDCOND1 -> ''\\n\" +\r\n        \"ORCOND ->\\tLOGCOND ORCOND1\\n\" +\r\n        \"ORCOND1 ->\\tor LOGCOND ORCOND1\\n\" +\r\n        \"ORCOND1 -> ''\\n\" +\r\n        \"LOGCOND ->\\tE LOGCOND1\\n\" +\r\n        \"LOGCOND1 ->\\t< E LOGCOND1\\n\" +\r\n        \"LOGCOND1 -> <= E LOGCOND1\\n\" +\r\n        \"LOGCOND1 -> > E LOGCOND1\\n\" +\r\n        \"LOGCOND1 -> >= E LOGCOND1\\n\" +\r\n        \"LOGCOND1 -> == E LOGCOND1\\n\" +\r\n        \"LOGCOND1 -> != E LOGCOND1\\n\" +\r\n        \"LOGCOND1 -> ''\\n\" +\r\n        \"E ->\\tT E1\\n\" +\r\n        \"E1 ->\\t+ T E1\\n\" +\r\n        \"E1 -> - T E1\\n\" +\r\n        \"E1 -> ''\\n\" +\r\n        \"T ->\\tF T1\\n\" +\r\n        \"T1 ->\\t* F T1\\n\" +\r\n        \"T1 -> / F T1\\n\" +\r\n        \"T1 -> % F T1\\n\" +\r\n        \"T1 -> ''\\n\" +\r\n        \"F ->\\t( SIMPLEEXP )\\n\" +\r\n        \"F -> id\\n\" +\r\n        \"F -> num\\n\"\r\n\r\n        rules = grammar.split('\\n');\r\n        console.log(rules);\r\n        alphabet = [];\r\n        nonterminals = [];\r\n        terminals = [];\r\n\r\n        collectAlphabetAndNonterminalsAndTerminals();\r\n        collectFirsts();\r\n        collectFollows();\r\n        makeRuleTable();\r\n        parseInput();\r\n\r\n    function makeRuleTable() {\r\n        ruleTable = new Object();\r\n\r\n        for (var i in rules) {\r\n            var rule = rules[i].trim().split('->');\r\n\r\n            if (rule.length < 2) {\r\n                continue;\r\n            }\r\n\r\n            var nonterminal = rule[0].trim();\r\n            var development = trimElements(rule[1].trim().split(' '));\r\n\r\n            var developmentFirsts = collectFirsts3(development);\r\n\r\n            for (var j in developmentFirsts) {\r\n                var symbol = developmentFirsts[j];\r\n\r\n                if (symbol != EPSILON) {\r\n                    if (ruleTable[nonterminal] == undefined) {\r\n                        ruleTable[nonterminal] = new Object();\r\n                    }\r\n\r\n                    var oldTableRule = ruleTable[nonterminal][symbol];\r\n\r\n                    if (oldTableRule == undefined) {\r\n                        ruleTable[nonterminal][symbol] = rules[i].trim();\r\n                    } else {\r\n                        ruleTable[nonterminal][symbol] = oldTableRule + \"<br>\" + rules[i].trim();\r\n                    }\r\n                } else {\r\n                    for (var j in follows[nonterminal]) {\r\n                        var symbol2 = follows[nonterminal][j];\r\n\r\n                        if (ruleTable[nonterminal] == undefined) {\r\n                            ruleTable[nonterminal] = new Object();\r\n                        }\r\n\r\n                        var oldTableRule = ruleTable[nonterminal][symbol2];\r\n\r\n                        if (oldTableRule == undefined) {\r\n                            ruleTable[nonterminal][symbol2] = rules[i].trim();\r\n                        } else {\r\n                            ruleTable[nonterminal][symbol2] = oldTableRule + \"<br>\" + rules[i].trim();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function emptyIfUndefined(string) {\r\n        return string == undefined ? '' : string;\r\n    }\r\n\r\n    function collectFirsts() {\r\n        firsts = new Object();\r\n\r\n        var notDone;\r\n\r\n        do {\r\n            notDone = false;\r\n\r\n            for (var i in rules) {\r\n                var rule = rules[i].split('->');\r\n\r\n                if (rule.length < 2) {\r\n                    continue;\r\n                }\r\n\r\n                var nonterminal = rule[0].trim();\r\n                var development = trimElements(rule[1].trim().split(' '));\r\n                var nonterminalFirsts = firsts[nonterminal];\r\n\r\n                if (nonterminalFirsts == undefined) {\r\n                    nonterminalFirsts = [];\r\n                }\r\n\r\n                if (development.length == 1 && development[0] == EPSILON) {\r\n                    notDone |= addUnique(EPSILON, nonterminalFirsts);\r\n                } else {\r\n                    notDone |= collectFirsts4(development, nonterminalFirsts);\r\n                }\r\n\r\n                firsts[nonterminal] = nonterminalFirsts;\r\n            }\r\n        } while (notDone);\r\n    }\r\n\r\n    /**\r\n     * @param development\r\n     * <br>Array of symbols\r\n     * @param nonterminalFirsts\r\n     * <br>Array of symbols\r\n     * <br>Input-output\r\n     * @return <code>true</code> If <code>nonterminalFirsts</code> has been modified\r\n     */\r\n    function collectFirsts4(development, nonterminalFirsts) {\r\n        var result = false;\r\n        var epsilonInSymbolFirsts = true;\r\n\r\n        for (var j in development) {\r\n            var symbol = development[j];\r\n            epsilonInSymbolFirsts = false;\r\n\r\n            if (isElement(symbol, terminals)) {\r\n                result |= addUnique(symbol, nonterminalFirsts);\r\n\r\n                break;\r\n            }\r\n\r\n            for (var k in firsts[symbol]) {\r\n                var first = firsts[symbol][k];\r\n\r\n                epsilonInSymbolFirsts |= first == EPSILON;\r\n\r\n                result |= addUnique(first, nonterminalFirsts);\r\n            }\r\n\r\n            if (!epsilonInSymbolFirsts) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (epsilonInSymbolFirsts) {\r\n            result |= addUnique(EPSILON, nonterminalFirsts);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @param sequence\r\n     * <br>Array of symbols\r\n     */\r\n    function collectFirsts3(sequence) {\r\n        var result = [];\r\n        var epsilonInSymbolFirsts = true;\r\n\r\n        for (var j in sequence) {\r\n            var symbol = sequence[j];\r\n            epsilonInSymbolFirsts = false;\r\n\r\n            if (isElement(symbol, terminals)) {\r\n                addUnique(symbol, result);\r\n\r\n                break;\r\n            }\r\n\r\n            for (var k in firsts[symbol]) {\r\n                var first = firsts[symbol][k];\r\n\r\n                epsilonInSymbolFirsts |= first == EPSILON;\r\n\r\n                addUnique(first, result);\r\n            }\r\n\r\n            epsilonInSymbolFirsts |= firsts[symbol] == undefined || firsts[symbol].length == 0;\r\n\r\n            if (!epsilonInSymbolFirsts) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (epsilonInSymbolFirsts) {\r\n            addUnique(EPSILON, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function collectFollows() {\r\n        follows = new Object();\r\n\r\n        var notDone;\r\n\r\n        do {\r\n            notDone = false;\r\n\r\n            for (var i in rules) {\r\n                var rule = rules[i].split('->');\r\n\r\n                if (rule.length < 2) {\r\n                    continue;\r\n                }\r\n\r\n                var nonterminal = rule[0].trim();\r\n                var development = trimElements(rule[1].trim().split(' '));\r\n\r\n                if (i == 0) {\r\n                    var nonterminalFollows = follows[nonterminal];\r\n\r\n                    if (nonterminalFollows == undefined) {\r\n                        nonterminalFollows = [];\r\n                    }\r\n\r\n                    notDone |= addUnique('$', nonterminalFollows);\r\n\r\n                    follows[nonterminal] = nonterminalFollows;\r\n                }\r\n\r\n                for (var j in development) {\r\n                    var symbol = development[j];\r\n\r\n                    if (isElement(symbol, nonterminals)) {\r\n                        var symbolFollows = follows[symbol];\r\n\r\n                        if (symbolFollows == undefined) {\r\n                            symbolFollows = [];\r\n                        }\r\n\r\n                        var afterSymbolFirsts = collectFirsts3(development.slice(parseInt(j) + 1));\r\n\r\n                        for (var k in afterSymbolFirsts) {\r\n                            var first = afterSymbolFirsts[k];\r\n\r\n                            if (first == EPSILON) {\r\n                                var nonterminalFollows = follows[nonterminal];\r\n\r\n                                for (var l in nonterminalFollows) {\r\n                                    notDone |= addUnique(nonterminalFollows[l], symbolFollows);\r\n                                }\r\n                            } else {\r\n                                notDone |= addUnique(first, symbolFollows);\r\n                            }\r\n                        }\r\n\r\n                        follows[symbol] = symbolFollows;\r\n                    }\r\n                }\r\n            }\r\n        } while (notDone);\r\n    }\r\n\r\n    function collectAlphabetAndNonterminalsAndTerminals() {\r\n        for (var i in rules) {\r\n            var rule = rules[i].split('->');\r\n            if (rule.length != 2) {\r\n                continue;\r\n            }\r\n\r\n            var nonterminal = rule[0].trim();\r\n            var development = trimElements(rule[1].trim().split(' '));\r\n\r\n            addUnique(nonterminal, alphabet);\r\n            addUnique(nonterminal, nonterminals);\r\n\r\n            for (var j in development) {\r\n                var symbol = development[j];\r\n\r\n                if (symbol != EPSILON) {\r\n                    addUnique(symbol, alphabet);\r\n                }\r\n            }\r\n        }\r\n\r\n        subtract(alphabet, nonterminals, terminals);\r\n    }\r\n\r\n    /**\r\n     * @param result\r\n     * <br>Array\r\n     * <br>Input-output\r\n     * @return <code>result</code>\r\n     */\r\n    function subtract(array1, array2, result) {\r\n        for (var i in array1) {\r\n            var element = array1[i];\r\n\r\n            if (!isElement(element, array2)) {\r\n                result[result.length] = element;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @return\r\n     * <br>Array\r\n     * <br>New\r\n     */\r\n    function trimElements(array) {\r\n        var result = [];\r\n\r\n        for (var i in array) {\r\n            result[i] = array[i].trim();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function isElement(element, array) {\r\n        for (var i in array) {\r\n            if (element == array[i]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param array\r\n     * <br>Input-output\r\n     * @return <code>true</code> iff <code>array</code> has been modified\r\n     */\r\n    function addUnique(element, array) {\r\n        if (!isElement(element, array)) {\r\n            array[array.length] = element;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function parseInput() {\r\n\r\n        var input = tokensList;\r\n        var stack = ['$', nonterminals[0]];\r\n\r\n        var tree = new Object();\r\n        tree.label = 'root';\r\n        tree.children = [];\r\n        var parents = [tree];\r\n\r\n        for (var i = 0, index = 0; i < 1000 && 1 < stack.length; ++i) {\r\n            var stackTop = stack[stack.length - 1];\r\n            var symbol = index < input.length ? input[index] : '$';\r\n\r\n            if (symbol.trim() == '') {\r\n                symbol = '$';\r\n            }\r\n\r\n            var rule = '';\r\n\r\n            if (stackTop == symbol) {\r\n                stack.pop();\r\n                ++index;\r\n                parents.pop().children.push(symbol);\r\n            } else {\r\n                if (isElement(stackTop, nonterminals)) {\r\n                    rule = ruleTable[stackTop][symbol];\r\n                    var node = new Object();\r\n                    node.label = stackTop;\r\n                    node.children = [];\r\n                    parents.pop().children.push(node);\r\n\r\n\r\n\r\n                    if (rule == undefined) {\r\n                        result = \"Error de sintaxis: \"+\"Se esperaba, \" + node.label + \" se obtuvo: \"+ symbol.toString();\r\n\r\n                        break;\r\n                    }\r\n\r\n\r\n                    stack.pop();\r\n\r\n                    var reverseDevelopment = rule.split('->')[1].trim().split(' ').slice(0).reverse();\r\n\r\n                    for (var i in reverseDevelopment) {\r\n                        parents.push(node);\r\n                    }\r\n\r\n                    if (!isElement(EPSILON, reverseDevelopment)) {\r\n                        stack = stack.concat(reverseDevelopment);\r\n                    } else {\r\n                        parents.pop().children.push(EPSILON);\r\n                    }\r\n                } else {\r\n                    result = \"Error de sintaxis: \"+\"Se esperaba, \" + node.label + \" se obtuvo: \"+ symbol.toString();\r\n\r\n                    console.log(stack)\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\nreturn result\r\n}\r\n","import React, {useState} from 'react';\r\nimport automaton from \"../Analizador-lexico/automaton\";\r\nimport CardLex from './CardLex';\r\nimport {CodeEditorEditable} from 'react-code-editor-editable'\r\nimport 'highlight.js/styles/atom-one-dark.css';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    ControlLabel,\r\n    Button,\r\n    ButtonToolbar,\r\n    Panel\r\n} from 'rsuite';\r\nimport CardSin from \"./CardSin\";\r\nimport syntaxAnalyzer from \"../Analizador-de-sintaxis/structures/syntaxAnalyzer\";\r\nimport syntaxAnalyzer2 from \"../Analizador-de-sintaxis/structures/syntaxAnalyzer2\";\r\n\r\n\r\nconst panelStyle = {\r\n    /* Extra small devices (phones, 600px and down) */\r\n    width: \"60rem\"\r\n}\r\n\r\n\r\nfunction FormSirio({onSelect, activeKey, ...props}) {\r\n    const [cardLex, setCardLex] = useState();\r\n    const [cardSin, setCardSin] = useState();\r\n    const [textArea, setTextArea] = useState(\"void main() {\\n  print('Hello, World!');\\n}\");\r\n\r\n    function showCard() {\r\n        if (0 !== textArea.trim().localeCompare(\"\")) {\r\n            let tokens = []\r\n            let response=\"\"\r\n            setCardLex()\r\n            tokens = automaton(textArea.trim())\r\n            response = syntaxAnalyzer2(tokens)\r\n            setCardLex(\r\n                <CardLex\r\n                    tokens={tokens}\r\n                />\r\n            )\r\n            setCardSin(\r\n                <CardSin\r\n                    response={response}\r\n                />\r\n            )\r\n\r\n\r\n        } else {\r\n            setCardLex()\r\n        }\r\n    }\r\n\r\n    function clear() {\r\n        setTextArea(\"\")\r\n        setCardLex()\r\n        setCardSin()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Panel header=\"Analizador léxico y sintáctico\" bordered style={panelStyle}>\r\n                <p/>\r\n                <Form fluid>\r\n                    <FormGroup>\r\n                        <ControlLabel>Código Dart</ControlLabel>\r\n                        <CodeEditorEditable\r\n                            value={textArea}\r\n                            setValue={setTextArea}\r\n                            width='100%'\r\n                            height='40vh'\r\n                            language='dart'\r\n                            inlineNumbers\r\n                            borderRadius=\"8px\"\r\n                            tabSize={5}\r\n                        />\r\n\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ButtonToolbar>\r\n                            <Button appearance=\"default\" color=\"green\" onClick={showCard}>Analizar</Button>\r\n                            <Button appearance=\"default\" onClick={clear}>Limpiar</Button>\r\n                        </ButtonToolbar>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Panel>\r\n            {cardLex}\r\n            {cardSin}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormSirio;\r\n","/* eslint-disable no-useless-escape */\r\nimport isCharConst from \"./categories/charConst\";\r\nimport isIdentifier from \"./categories/identify\";\r\nimport isKeyword from \"./categories/keyword\";\r\nimport isNumConst from \"./categories/numConst\";\r\nimport isOperator from \"./categories/operator\";\r\nimport isSeparator from \"./categories/separator\";\r\n\r\nexport default function automaton2(text) {\r\n\r\n    let textArray = text.split(/(?:([\"'])((?:(?=(?:\\\\)*)\\\\.|.)*?)\\1)/gm)\r\n    let textArrayCharConst = []\r\n    for (let i = 0; i < textArray.length; i) {\r\n        let value = textArray[i]\r\n        if (0 === value.localeCompare(\"\\\"\")) {\r\n            value = \"\\\"\".concat(textArray[i + 1], \"\\\"\")\r\n            i++\r\n        } else if (0 === value.localeCompare(\"\\'\")) {\r\n            value = \"\\'\".concat(textArray[i + 1], \"\\'\")\r\n            i++\r\n        }\r\n        textArrayCharConst.push(value)\r\n        i++\r\n    }\r\n\r\n    textArrayCharConst.forEach(function (value, index) {\r\n            let expr = textArrayCharConst[index];\r\n            if (!isCharConst(value)) {\r\n                //Se eliminan saltos de linea y tabulaciones\r\n                expr = expr.replaceAll(/\\n/g, \" \")\r\n                expr = expr.replaceAll(/\\t/g, \" \")\r\n\r\n                //Se aislan primero los signos que pueden generar cadenas de texto añadiendoles espacios.\r\n                expr = expr.replaceAll(/\"/g, ' \" ')\r\n                expr = expr.replaceAll(/'/g, \" ' \")\r\n\r\n                //se aislan los delimitadores o separadores\r\n                const separatorsList = [\"\\(\", \"\\)\", \"\\[\", \"\\]\", \"\\{\", \"\\}\", \";\", \",\", \":\"]\r\n                separatorsList.forEach(function (value) {\r\n                    let regex = new RegExp(\"\\\\\".concat(value), \"g\")\r\n                    expr = expr.replaceAll(regex, \" \".concat(value, \" \"))\r\n                })\r\n\r\n                //Se aislan los operadores + - * / % < > = ! & | ^ ~  ?\r\n                const operatorsList = [\"\\+\", \"-\", \"\\*\", \"\\/\", \"%\", \"<\", \">\", \"=\", \"!\", \"&\", \"\\|\", \"\\^\", \"~\", \"\\?\", \"\\.\"]\r\n                operatorsList.forEach(function (value) {\r\n                    let regex = new RegExp(\"\\\\\".concat(value), \"g\")\r\n                    expr = expr.replaceAll(regex, \" \".concat(value, \" \"))\r\n                })\r\n\r\n                //Se reagrupa el \".\" si esta entre numeros\r\n                expr = expr.replaceAll(/(?<=\\d)( \\. )(?=\\d)/g, \".\")\r\n                //Se reagrupa el \"-\" spara numeros negativos\r\n                expr = expr.replaceAll(/(- )(?=\\d)/g, \"-\")\r\n\r\n                //Se reagrupan los operadores compuestos triples\r\n                const tripleOperatorsList = [\"\\<\\<\\=\", \"\\>\\>\\=\", \"\\~\\/\\=]\", \"...\"]\r\n                tripleOperatorsList.forEach(function (value) {\r\n                    let regex = new RegExp(\"\\\\\".concat(value.charAt(0), \"\\\\s\\\\s\", \"\\\\\", value.charAt(1), \"\\\\s\\\\s\", \"\\\\\", value.charAt(2)), \"g\")\r\n                    expr = expr.replaceAll(regex, \" \".concat(value.charAt(0), value.charAt(1), value.charAt(2), \" \"))\r\n                })\r\n\r\n                //Se reagrupan los operadores compuestos dobles\r\n                const dobleOperatorsList = [\"\\+\\+\", \"–\\=\", \"\\/\\=\", \"\\%\\=\", \"\\^\\=\", \"\\+\\=\", \"\\*\\=\", \"\\&\\=\", \"\\|\\=\",\r\n                    \"\\|\\|\", \"\\&\\&\", \"\\+\\+\", \"\\-\\-\", \"\\<\\<\", \"\\>\\>\", \"\\=\\=\", \"\\!\\=\", \"\\>\\=\", \"\\<\\=\", \"\\~\\/\", \"\\?\\?\", \"\\?\\.\"]\r\n                dobleOperatorsList.forEach(function (value) {\r\n                    let regex = new RegExp(\"\\\\\".concat(value.charAt(0), \"\\\\s\\\\s\", \"\\\\\", value.charAt(1)), \"g\")\r\n                    expr = expr.replaceAll(regex, \" \".concat(value.charAt(0), value.charAt(1), \" \"))\r\n                })\r\n            }\r\n            textArrayCharConst[index] = expr;\r\n        }\r\n    )\r\n    text = textArrayCharConst.join(\" \");\r\n    //Se eliminan espacios dobles\r\n    text = text.trim();\r\n    text = text.replaceAll(/\\s{2,}/g, \" \");\r\n\r\n    //Se separa el texto por espacios simples\r\n    text = text.match(/[^\\s\"']+|(?:([\"'])((?:(?=(?:\\\\)*)\\\\.|.)*?)\\1)/g);\r\n\r\n    //Se tokeniza cada elemento de la lista text y se guarda en un array de tokens.\r\n    let listaTokens = [];\r\n    text.forEach(tokenizar);\r\n\r\n    function tokenizar(value, index, array) {\r\n        let key = \"No encontrado\"\r\n\r\n        if (isSeparator(value)) {\r\n            key = \"Separador\"\r\n        }\r\n        if (isOperator(value)) {\r\n            key = \"Operador\"\r\n        }\r\n        if (isNumConst(value)) {\r\n            key = \"Constante Numerica\"\r\n        }\r\n        if (isIdentifier(value)) {\r\n            key = \"Identificador\"\r\n        }\r\n        if (isKeyword(value)) {\r\n            key = \"Palabra reservada\"\r\n        }\r\n        if (isCharConst(value)) {\r\n            key = \"Cadena de texto\"\r\n        }\r\n\r\n        listaTokens.push({key: key, value: value})\r\n    }\r\n\r\n    return listaTokens\r\n}\r\n\r\n","export default function isSeparator(word) {\r\n    let acceptation\r\n    const regex = /(?:\\[|]|\\(|\\)|{|}|,|;|:|\\.{3})/g\r\n    acceptation = regex.test(word.trim())\r\n    return acceptation;\r\n}\r\n","export default function isOperator(word) {\r\n    let acceptation\r\n    const regex = /(?:<<=|>>=|~\\/=|–=|\\/=|%=|\\^=|\\+=|\\*=|&=|\\|=|\\|\\||&&|\\+\\+|--|<<|>>|==|!=|>=|<=|\\?\\?|\\?\\.|~\\/|!|&|\\||\\^|=|>|<|\\+|–|\\*|\\/|%|~|\\?|\\.|-)/g\r\n    acceptation = regex.test(word.trim())\r\n    return acceptation;\r\n}\r\n","export default function isNumConst(word) {\r\n    let estate = 0\r\n    let acceptation\r\n    word = word.split(\"\");\r\n    word.forEach(automaton);\r\n\r\n    function automaton(value, index, array) {\r\n        let symbol;\r\n        switch (value) {\r\n            case \"0\":\r\n            case \"1\":\r\n            case \"2\":\r\n            case \"3\":\r\n            case \"4\":\r\n            case \"5\":\r\n            case \"6\":\r\n            case \"7\":\r\n            case \"8\":\r\n            case \"9\":\r\n                symbol = \"d\"\r\n                break;\r\n            case \".\":\r\n                symbol = \".\"\r\n                break;\r\n            case\"e\":\r\n            case \"E\":\r\n                symbol = \"E\"\r\n                break;\r\n            case \"-\":\r\n                symbol = \"s\"\r\n                break;\r\n            default:\r\n                symbol = \"x\"\r\n                estate = 9\r\n                acceptation = false\r\n        }\r\n\r\n        switch (estate) {\r\n            case 0:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 2\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 8\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 1\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                break;\r\n            case 1:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 2\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 8\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                break;\r\n            case 2:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 2\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 34\r\n                        acceptation = true\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 5\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 34:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 34\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 5\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 5:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 7\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 6\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 6:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 7\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 7:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 7\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            case 8:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 34\r\n                        acceptation = true\r\n                        break;\r\n                    case \".\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                break;\r\n            case 9:\r\n                switch (symbol) {\r\n                    case \"d\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \".\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"E\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    case \"s\":\r\n                        estate = 9\r\n                        acceptation = false\r\n                        break;\r\n                    default:\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    return acceptation;\r\n}\r\n","export default function isIdentifier(word) {\r\n    let acceptation\r\n    const regex = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/gm\r\n    acceptation = regex.test(word.trim())\r\n    return acceptation;\r\n}\r\n","export default function isKeyword(word) {\r\n    let acceptation\r\n    const regex = /\\b(?:abstract|else|import|super|as|enum|in|switch|assert|export|interface|sync|async|extends|is|this|await|extensioyarn n|library|throw|break|external|mixin|true|case|factory|new|try|catch|false|null|typedef|class|final|on|var|const|finally|operator|void|continue|For|part|while|covarient|Function|rethrow|with|default|get|return|yield|deffered|hide|set|do|if|show|dynamic|implements|static)\\b/\r\n    acceptation = regex.test(word.trim())\r\n    return acceptation;\r\n}\r\n","import {\r\n    Container,\r\n    Content,\r\n    Row,\r\n    Col\r\n} from 'rsuite';\r\nimport Header from \"../components/Header\"\r\nimport Form from \"../components/Form\"\r\n\r\n\r\nfunction Home({onSelect, activeKey, ...props}) {\r\n\r\n    const containerStyle = {\r\n        height: \"100%\",\r\n        maxWidth: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: \"2%\"\r\n    };\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Header/>\r\n            <Content style={containerStyle}>\r\n                <Col>\r\n                    <Row>\r\n                        <Form/>\r\n                    </Row>\r\n                </Col>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import Home from './pages/home'\r\n\r\nfunction App() {\r\n    return (\r\n            <Home/>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'rsuite/dist/styles/rsuite-dark.css';\r\nimport App from './App/index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}